var annotated_dup =
[
    [ "alien_cache", "structalien__cache.html", "structalien__cache" ],
    [ "alloc_context", "structalloc__context.html", "structalloc__context" ],
    [ "array_cache", "structarray__cache.html", "structarray__cache" ],
    [ "cma", "structcma.html", "structcma" ],
    [ "cma_mem", "structcma__mem.html", "structcma__mem" ],
    [ "detached_freelist", "structdetached__freelist.html", "structdetached__freelist" ],
    [ "dirty_throttle_control", "structdirty__throttle__control.html", "structdirty__throttle__control" ],
    [ "dma_page", "structdma__page.html", "structdma__page" ],
    [ "dma_pool", "structdma__pool.html", "structdma__pool" ],
    [ "early_log", "structearly__log.html", "structearly__log" ],
    [ "file_region", "structfile__region.html", "structfile__region" ],
    [ "gup_benchmark", "structgup__benchmark.html", "structgup__benchmark" ],
    [ "hugetlb_cgroup", "structhugetlb__cgroup.html", "structhugetlb__cgroup" ],
    [ "kasan_access_info", "structkasan__access__info.html", "structkasan__access__info" ],
    [ "kasan_alloc_meta", "structkasan__alloc__meta.html", "structkasan__alloc__meta" ],
    [ "kasan_free_meta", "structkasan__free__meta.html", "structkasan__free__meta" ],
    [ "kasan_global", "structkasan__global.html", "structkasan__global" ],
    [ "kasan_source_location", "structkasan__source__location.html", "structkasan__source__location" ],
    [ "kasan_track", "structkasan__track.html", "structkasan__track" ],
    [ "khugepaged_scan", "structkhugepaged__scan.html", "structkhugepaged__scan" ],
    [ "kmalloc_info_struct", "structkmalloc__info__struct.html", "structkmalloc__info__struct" ],
    [ "kmem_cache_node", "structkmem__cache__node.html", "structkmem__cache__node" ],
    [ "kmemleak_object", "structkmemleak__object.html", "structkmemleak__object" ],
    [ "kmemleak_scan_area", "structkmemleak__scan__area.html", "structkmemleak__scan__area" ],
    [ "ksm_scan", "structksm__scan.html", "structksm__scan" ],
    [ "link_free", "structlink__free.html", "structlink__free" ],
    [ "mapping_area", "structmapping__area.html", "structmapping__area" ],
    [ "mem_cgroup_event", "structmem__cgroup__event.html", "structmem__cgroup__event" ],
    [ "mem_cgroup_eventfd_list", "structmem__cgroup__eventfd__list.html", "structmem__cgroup__eventfd__list" ],
    [ "mem_cgroup_tree", "structmem__cgroup__tree.html", "structmem__cgroup__tree" ],
    [ "mem_cgroup_tree_per_node", "structmem__cgroup__tree__per__node.html", "structmem__cgroup__tree__per__node" ],
    [ "memcg_kmem_cache_create_work", "structmemcg__kmem__cache__create__work.html", "structmemcg__kmem__cache__create__work" ],
    [ "memcg_stock_pcp", "structmemcg__stock__pcp.html", "structmemcg__stock__pcp" ],
    [ "memory_failure_cpu", "structmemory__failure__cpu.html", "structmemory__failure__cpu" ],
    [ "memory_failure_entry", "structmemory__failure__entry.html", "structmemory__failure__entry" ],
    [ "mempolicy_operations", "structmempolicy__operations.html", "structmempolicy__operations" ],
    [ "mm_slot", "structmm__slot.html", "structmm__slot" ],
    [ "move_charge_struct", "structmove__charge__struct.html", "structmove__charge__struct" ],
    [ "oom_wait_info", "structoom__wait__info.html", "structoom__wait__info" ],
    [ "page_owner", "structpage__owner.html", "structpage__owner" ],
    [ "page_referenced_arg", "structpage__referenced__arg.html", "structpage__referenced__arg" ],
    [ "page_state", "structpage__state.html", "structpage__state" ],
    [ "pcpu_block_md", "structpcpu__block__md.html", "structpcpu__block__md" ],
    [ "pcpu_chunk", "structpcpu__chunk.html", "structpcpu__chunk" ],
    [ "qlist_head", "structqlist__head.html", "structqlist__head" ],
    [ "qlist_node", "structqlist__node.html", "structqlist__node" ],
    [ "queue_pages", "structqueue__pages.html", "structqueue__pages" ],
    [ "rmap_item", "structrmap__item.html", "structrmap__item" ],
    [ "scan_control", "structscan__control.html", "structscan__control" ],
    [ "size_class", "structsize__class.html", "structsize__class" ],
    [ "slabinfo", "structslabinfo.html", "structslabinfo" ],
    [ "slob_block", "structslob__block.html", "structslob__block" ],
    [ "slob_rcu", "structslob__rcu.html", "structslob__rcu" ],
    [ "stable_node", "structstable__node.html", "structstable__node" ],
    [ "swap_cgroup", "structswap__cgroup.html", "structswap__cgroup" ],
    [ "swap_cgroup_ctrl", "structswap__cgroup__ctrl.html", "structswap__cgroup__ctrl" ],
    [ "test_node", "structtest__node.html", "structtest__node" ],
    [ "to_kill", "structto__kill.html", "structto__kill" ],
    [ "track", "structtrack.html", "structtrack" ],
    [ "uncharge_gather", "structuncharge__gather.html", "structuncharge__gather" ],
    [ "vfree_deferred", "structvfree__deferred.html", "structvfree__deferred" ],
    [ "vmap_block", "structvmap__block.html", "structvmap__block" ],
    [ "vmap_block_queue", "structvmap__block__queue.html", "structvmap__block__queue" ],
    [ "vmpressure_event", "structvmpressure__event.html", "structvmpressure__event" ],
    [ "wait_page_key", "structwait__page__key.html", "structwait__page__key" ],
    [ "wait_page_queue", "structwait__page__queue.html", "structwait__page__queue" ],
    [ "z3fold_header", "structz3fold__header.html", "structz3fold__header" ],
    [ "z3fold_ops", "structz3fold__ops.html", "structz3fold__ops" ],
    [ "z3fold_pool", "structz3fold__pool.html", "structz3fold__pool" ],
    [ "zbud_header", "structzbud__header.html", "structzbud__header" ],
    [ "zbud_pool", "structzbud__pool.html", "structzbud__pool" ],
    [ "zpool", "structzpool.html", "structzpool" ],
    [ "zs_compact_control", "structzs__compact__control.html", "structzs__compact__control" ],
    [ "zs_pool", "structzs__pool.html", "structzs__pool" ],
    [ "zs_size_stat", "structzs__size__stat.html", "structzs__size__stat" ],
    [ "zspage", "structzspage.html", "structzspage" ],
    [ "zswap_entry", "structzswap__entry.html", "structzswap__entry" ],
    [ "zswap_header", "structzswap__header.html", "structzswap__header" ],
    [ "zswap_pool", "structzswap__pool.html", "structzswap__pool" ],
    [ "zswap_tree", "structzswap__tree.html", "structzswap__tree" ]
];